$button-circle-solid-border-width: 4px;

$text-highlight-shadow: 0px 1px 0px rgba(white, 0.2);

@function -button-height($size) {
  @if $size == jumbo {
    @return round($font-size-default * 3.6429); // 51
  }

  @if $size == large {
    @return round($font-size-default * 2.7143); // 38
  }

  @if $size == small {
    @return round($font-size-default * 1.8571); // 26
  }

  @if $size == mini {
    @return round($font-size-default * 1.5714); // 22
  }

  @return $font-size-default * 2.2857; // 32
}

@mixin -button-base {
  @include border-box;
  display: inline-block;
  text-decoration: none;
  text-align: center;
  @include transition(background-color .3s);
  cursor: pointer;

  &:hover { text-decoration: none; }
  &:focus { outline: 0; }
  &:active { @include transition(background-color 0s); }

  height:       round(-button-height(normal));
  line-height:  round(-button-height(normal));
  padding:    0 round(-button-height(normal) * 0.78125);

  @each $style in (jumbo large small mini) {
    &.btn-#{$style} {
      height:       round(-button-height($style));
      line-height:  round(-button-height($style));
      padding:    0 round(-button-height($style) * 0.78125);
      font-size:    -button-height($style) / 2.2857;
    }
  }
}

@mixin -button-flat($bg-color: $black-10, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  border: 0 none;

  &:hover { background-color: lighten($bg-color, 6%); }
  &:active {
    background-color: darken($bg-color, 4%);
    @include box-shadow(inset 0px 1px 3px rgba(black, 0.3), $text-highlight-shadow);
  }
}

@mixin -button-solid($bg-color: $black-10, $text-color: white) {
  @include bg-linear-gradient(lighten($bg-color, 5%), darken($bg-color, 5%));
  color: $text-color;
  border:solid 1px darken($bg-color, 10%);
  @include box-shadow(
    inset 0px 1px 0px 0px rgba(white, 0.5), 
    0px 1px 1px 0px rgba(black, 0.2)
  );

  @if $text-color == white {
    @include text-shadow(0 -1px 1px rgba(darken($bg-color, 80%), 0.3));
  }

  &:hover {
    @include bg-linear-gradient(lighten($bg-color, 10%), darken($bg-color, 7%));
  }

  &:active {
    background: desaturate($bg-color, 20%);
    @include box-shadow(inset 0px 1px 3px rgba(black, 0.3), $text-highlight-shadow);
    color: darken($bg-color, 20%);
    @include text-shadow(0px 1px 0px rgba(white, 0.4));
  }

  line-height: -button-height(normal) - 2px;
  &.btn-circle {
    border-width:$button-circle-solid-border-width;
    line-height:-button-height(normal) * 3.75 - $button-circle-solid-border-width * 2;
  }

  @each $style in (jumbo large small mini) {
    &.btn-#{$style} {
      line-height: -button-height($style) - 2px;
      &.btn-circle {
        line-height: -button-height($style) * 3.75 - $button-circle-solid-border-width * 2;
      }
    }
  }
}

@mixin -button-bdb($bg-color: $black-10, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  border: 0 none;
  border-bottom: solid 2px darken($bg-color, 10%);

  &:hover { 
    background-color: lighten($bg-color, 6%);
    border-bottom-color: darken(lighten($bg-color, 6%), 10%);
  }
  &:active {
    background-color: darken($bg-color, 4%);
    border-bottom-width: 0;
    @include box-shadow(inset 0px 1px 3px rgba(black, 0.3), $text-highlight-shadow);
  }
}

@mixin -button-rounded {
  &.btn-rounded {
    border-radius: $border-radius-default;
  }
}

@mixin -button-pill {
  &.btn-pill {
    border-radius: 100px;
  }
}

@mixin -button-circle {
  &.btn-circle {
    padding:0;
    text-align:center;
    border-radius:100px;

    width:        -button-height(normal) * 3.75;
    height:       -button-height(normal) * 3.75;
    line-height:  -button-height(normal) * 3.75;
    font-size:    -button-height(normal) / 1.77778;

    @each $style in (jumbo large small mini) {
      &.btn-#{$style} {
        width:        -button-height($style) * 3.75;
        height:       -button-height($style) * 3.75;
        line-height:  -button-height($style) * 3.75;
        font-size:    -button-height($style) / 1.77778; 
      }
    }
  }
}

@mixin -button-block {
  &.btn-block {
    display:block;
    font-size:18px;
    height:       -button-height(normal) * 1.1875;
    line-height:  -button-height(normal) * 1.1875;
    @each $style in (jumbo large small mini) {
      &.btn-#{$style} {
        height:      -button-height($style) * 1.1875; 
        line-height: -button-height($style) * 1.1875;
      }
    }
  }
}

@mixin -button-disabled {
  &.disabled, &[disabled] {
    background:#eee;
    color:#ccc;
    border:solid 1px #ddd;
    cursor:default;
    @include box-shadow(none);
    @include text-shadow(none);

    &:focus, &:hover, &:active{
      background:#eee;
      color:#ccc;
      border:solid 1px #ddd;
      cursor:default;
      @include box-shadow(none);
      @include text-shadow(none);
    }

    line-height:-button-height(normal) - 2px;
    @each $style in (jumbo large small mini) {
      &.btn-#{$style} {
        line-height:  -button-height($style) - 2px;
      }
    }

    &.btn-circle {
      border:solid 1px #ddd;
      line-height: -button-height(normal) * 3.75 - 2px;
      @each $style in (jumbo large small mini) {
        &.btn-#{$style} {
          line-height: -button-height($style) * 3.75 - 2px;
        }
      }
    }

    &.btn-block {
      line-height:  -button-height(normal) * 1.1875 - 2px;
      @each $style in (jumbo large small mini) {
        &.btn-#{$style} {
          line-height: -button-height($style) * 1.1875 - 2px;
        }
      }
    }
  }
}

@function -text-color($name) {
  @if $name == 'dawn' {
    @return $black-60;
  } @else {
    @return #fff;
  }
}

a.btn, button.btn, input[type=submit].btn {
  @include -button-base;

  &.btn-flat  { @include -button-flat($text-color: $black-60); }
  &.btn-solid { @include -button-solid($text-color: $black-60); }
  &.btn-bdb   { @include -button-bdb($text-color: $black-60); }

  @for $i from 1 through 12 {
    $key: nth($area-color-names, $i);
    $bg-color: nth($area-colors, $i);
    $text-color: -text-color($key);

    &.btn-flat-#{$key} {
      @include -button-flat($bg-color, $text-color);
    }

    &.btn-solid-#{$key} {
      @include -button-solid($bg-color, $text-color);
    }

    &.btn-bdb-#{$key} {
      @include -button-bdb($bg-color, $text-color);
    }
  }

  @include -button-rounded;
  @include -button-pill;
  @include -button-circle;
  @include -button-block;
  @include -button-disabled;
}

